[project]
name = "archedbrows"
dynamic = ["version"]
description = "Save text and media. Browse through your archive."
readme = "README.md"
license = "AGPL-3.0-or-later"
authors = [
  { name = "thcrt", email = "110127860+thcrt@users.noreply.github.com" },
]
requires-python = ">=3.13"
dependencies = [
  "arrow>=1.3.0",
  "flask>=3.1.0",
  "flask-migrate>=4.1.0",
  "flask-sqlalchemy>=3.1.1",
  "flask-vite>=0.5.2",
  "gallery-dl-bytes>=2.5.0",
  "humanize>=4.11.0",
  "types-flask-migrate>=4.1.0.20250112",
  "waitress>=3.0.2",
  "yt-dlp[curl-cffi,default]>=2025.1.26",
]

[project.urls]
Source = "https://github.com/thcrt/archedbrows"
Issues = "https://github.com/thcrt/archedbrows/issues"

[dependency-groups]
dev = [
  "pyright>=1.1.394",
  "python-dotenv>=1.0.1",
  "ruff>=0.9.4",
  "yt-dlp-types>=0.0.14",
]

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch]
version.source = "vcs"
build.hooks.vcs.version-file = "api/archedbrows/_version.py"
build.packages = ["api/archedbrows"]

[tool.pyright]
include = ["api/archedbrows"]
strict = ["**/*"]
ignore = ["**/_version.py"]
deprecateTypingAliases = true
reportCallInDefaultInitializer = "information"
reportImplicitOverride = "warning"
reportImplicitStringConcatenation = "warning"
reportPropertyTypeMismatch = "warning"
reportShadowedImports = "warning"
reportUninitializedInstanceVariable = "warning"
reportUnnecessaryTypeIgnoreComment = "warning"
reportUnusedCallResult = "information"

[tool.ruff]
line-length = 100
lint.select = [
  "ERA",   # eradicate
  "ASYNC", # flake8-async
  "S",     # flake8-bandit
  "BLE",   # flake8-blind-except
  "FBT",   # flake8-boolean-trap
  "B",     # flake8-bugbear
  "A",     # flake8-builtins
  "C4",    # flake8-comprehensions
  "EM",    # flake8-errmsg
  "FA",    # flake8-future-annotations
  "ISC",   # flake8-implicit-str-concat
  "LOG",   # flake8-logging
  "G",     # flake8-logging-format
  "INP",   # flake8-no-pep420
  "PIE",   # flake8-pie
  "T20",   # flake8-print
  "Q",     # flake8-quotes
  "RSE",   # flake8-raise
  "RET",   # flake8-return
  "SLF",   # flake8-self
  "SIM",   # flake8-simplify
  "SLOT",  # flake8-slots
  "TID",   # flake8-tidy-imports
  "TC",    # flake8-type-checking
  "ARG",   # flake8-unused-arguments
  "PTH",   # flake8-use-pathlib
  "FLY",   # flynt
  "I",     # isort
  "C90",   # mccabe
  "N",     # pep8-naming
  "PERF",  # perflint
  "E",     # pycodestyle errors
  "W",     # pycodestyle warnings
  "D",     # pydocstyle
  "F",     # pyflakes
  "PL",    # pylint
  "UP",    # pyupgrade
  "FURB",  # refurb
  "RUF",   # ruff
  "TRY",   # tryceratops
]
lint.ignore = ["D100", "D101", "D102", "D103", "D104", "D105", "D106", "D107"]
lint.per-file-ignores = { "migrations/**/*" = ["INP001"] }
lint.pydocstyle.convention = "google"
